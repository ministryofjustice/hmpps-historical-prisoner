/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/identifiers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve prisoners from identifier search terms
     * @description Requires role ROLE_HPA_USER
     */
    get: operations['findPrisonersWithIdentifiers']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/address-lookup': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve prisoner numbers from address terms
     * @description Requires role ROLE_HPA_USER
     */
    get: operations['findPrisonersWithAddresses']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    Pageable: {
      /** Format: int32 */
      page?: number
      /** Format: int32 */
      size?: number
      sort?: string[]
    }
    PageMetadata: {
      /** Format: int64 */
      size?: number
      /** Format: int64 */
      number?: number
      /** Format: int64 */
      totalElements?: number
      /** Format: int64 */
      totalPages?: number
    }
    PagedModelPrisoner: {
      content?: components['schemas']['Prisoner'][]
      page?: components['schemas']['PageMetadata']
    }
    Prisoner: {
      /** Format: int32 */
      id?: number
      prisonNumber: string
      personIdentifier: number
      surname?: string
      forename1?: string
      forename2?: string
      /** Format: date */
      birthDate?: string
      isAlias: boolean
      sex?: string
      pncNumber?: string
      croNumber?: string
      hasHdc: boolean
      isLifer: boolean
      /** Format: date */
      receptionDate?: string
      primarySurname?: string
      primaryForename1?: string
      primaryInitial?: string
      primaryForename2?: string
      /** Format: date */
      primaryBirthDate?: string
      alias?: boolean
      lifer?: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  findPrisonersWithIdentifiers: {
    parameters: {
      query: {
        prisonNumber?: string
        pnc?: string
        cro?: string
        pageRequest: components['schemas']['Pageable']
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description list of prisoner numbers */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PagedModelPrisoner']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  findPrisonersWithAddresses: {
    parameters: {
      query: {
        addressTerms: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description list of prisoner numbers */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': string[]
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden to access this endpoint */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
